# Copyright (c) TuringCSTC. All rights reserved.
# Licensed under the Apache License, Version 2.0. See LICENSE in the project root for license information.

# ----------------------------------------
# WEB PROPERTIES
# ----------------------------------------
# Server HTTP port.
server:
  port: 8080

# ----------------------------------------
# CORE PROPERTIES
# ----------------------------------------
# LOGGING
logging:
  # Location of the log file. For instance, `/var/log`.
  path: logs
  file: ${logging.path}/nebula-prod.log
  # Maximum of archive log files to keep. default 0 days to keep
  file.max-history: 30
  # Maximum log file size. default each archived file, size max 10MB
  file.max-size: 20MB
  # 项目依赖的library日志级别在logback-spring-prod.xml中设置。
  config: classpath:config/logback-spring-prod.xml
  # 项目package的日志级别在此设置。
  # logger level : TRACE, DEBUG, INFO, WARN, ERROR, FATAL
  Level:
    root: ERROR
    nebula.application: INFO

# BANNER
# http://patorjk.com/software/taag/#p=display&h=0&v=0&f=Standard&t=Nebula-Dev
spring:
  banner:
    location: classpath:banner/banner-prod.txt

  # DATASOURCE
  datasource:
    # ref: https://github.com/brettwooldridge/HikariCP
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:mysql://localhost:3306/nebuladb?useUnicode=true&characterEncoding=utf8&useSSL=false&useLegacyDatetimeCode=false&serverTimezone=UTC
    username: root
    password: 123456
    hikari:
      poolName: Hikari
      auto-commit: false
      data-source-properties:
        cachePrepStmts: true
        prepStmtCacheSize: 250
        prepStmtCacheSqlLimit: 2048
        useServerPrepStmts: true

  liquibase:
      # Change log configuration path.
      # 这里暂时使用与h2相同的数据库定义
      change-log: classpath:liquibase/db.changelog-master.xml
      # Comma-separated list of runtime contexts to use.
      contexts: "sample"
# ===================================================================
# JHipster specific properties
#
# Full reference is available at: https://www.jhipster.tech/common-application-properties/
# ===================================================================
jhipster:
  http:
    cache: # Used by the CachingHttpHeadersFilter
      timeToLiveInDays: 1461
  cache: # Cache configuration
    ehcache: # Ehcache configuration
      time-to-live-seconds: 3600 # By default objects stay 1 hour in the cache
      max-entries: 1000 # Number of objects in each cache entry
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        # As this is the PRODUCTION configuration, you MUST change the default key, and store it securely:
        # - In the JHipster Registry (which includes a Spring Cloud Config server)
        # - In a separate `application-prod.yml` file, in the same folder as your executable JAR file
        # - In the `JHIPSTER_SECURITY_AUTHENTICATION_JWT_BASE64_SECRET` environment variable
        base64-secret: YjM1YTgxMGQyNDNlOGU0MzY2MDQ5OGUzZTAwMTJlMGQ4MjMxNDcyZWRhNzE0NDBjZDkwY2U1YzVlZjE3MmU1N2RkZWFjYzFkYTNmNDhlZDU3MzliYTQ2MWI4ODdmZDJjZDY2NTJkYTEwNjA5ZGZjOGZmYWQzMWYyNDhmMDFiNDE=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  mail: # specific JHipster mail property, for standard properties see MailProperties
    from: jhipsterSampleApplication@localhost
    base-url: http://my-server-url-to-change # Modify according to your server's URL
  metrics:
    logs: # Reports metrics in the logs
      enabled: false
      report-frequency: 60 # in seconds
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application: