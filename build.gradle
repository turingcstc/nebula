plugins {
    id 'org.springframework.boot' version '2.1.4.RELEASE'
    id 'java'
    //来自 mapstruct 文档，新的 gradle 已经不需要这个了。
    // Gradle plugin making it easier/safer to use Java annotation processors
    // https://plugins.gradle.org/plugin/net.ltgt.apt
    //id "net.ltgt.apt" version "0.21"
}

apply plugin: 'io.spring.dependency-management'

group = 'nebula'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

//下面这几行来自 start.spring.io 生成的 lombok 配置，未理解用意，注释掉好像没有影响。
// gradle 已经支持 compileOnly,这个配置可能针对低版本的gradle的。
// 官网指南并没有这个配置。
// https://projectlombok.org/setup/gradle
//configurations {
//    compileOnly {
//        extendsFrom annotationProcessor
//    }
//}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'
    implementation "org.springframework.boot:spring-boot-starter-cache"

//    implementation 'org.springframework.security.oauth:spring-security-oauth2'
    
//    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    // 使用 org.hibernate.envers.Audited
    implementation 'org.hibernate:hibernate-envers'
    implementation 'org.apache.commons:commons-lang3'

    implementation "org.zalando:problem-spring-web:0.24.0-RC.0"

//    implementation "javax.cache:cache-api"
    implementation "org.ehcache:ehcache"
    implementation "org.hibernate:hibernate-jcache"

    //https://github.com/jwtk/jjwt#install-jdk-gradle
    implementation "io.jsonwebtoken:jjwt-api:0.10.5"
    runtimeOnly "io.jsonwebtoken:jjwt-impl:0.10.5"
    runtimeOnly "io.jsonwebtoken:jjwt-jackson:0.10.5"
   

//    implementation "org.springframework.security:spring-security-config"
    implementation "org.springframework.security:spring-security-data"
//    implementation "org.springframework.security:spring-security-web"

    annotationProcessor ("org.springframework.boot:spring-boot-configuration-processor:${spring_boot_version}") {
        exclude group: "com.vaadin.external.google", module: "android-json"
    }
    
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    compileOnly "org.mapstruct:mapstruct-jdk8:${mapstruct_version}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstruct_version}"

    //想把 mysql 运行库放到 profile_prod.gradle 文件中，发现不能正确初始化 Liquibase
    runtimeOnly 'mysql:mysql-connector-java'
    
    //developmentOnly 是一个自定义的配置，参考下面的官方文档。spring boot 项目组提了一个issues,想要更新 gradle 插件，
    // 提供此功能，而无需自定义配置，现在还未实现。start.spring.io 此处使用了 runtimeOnly 。
    //https://docs.spring.io/spring-boot/docs/2.1.4.RELEASE/reference/htmlsingle/#using-boot-devtools
    //https://github.com/spring-projects/spring-boot/issues/16599
    //https://github.com/spring-io/initializr/issues/850
    developmentOnly 'org.springframework.boot:spring-boot-devtools'


    implementation "org.springframework.boot:spring-boot-starter-actuator"
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

if (project.hasProperty('prod')) {
    apply from: 'profile_prod.gradle'
} else {
    apply from: 'profile_dev.gradle'
}